# .github/workflows/deploy-demo.yml

name: Deploy Demo App to GitHub Pages

# Run this workflow only when changes are pushed to the `main` branch
# inside the `demo/` directory, or when triggered manually.
on:
  push:
    branches:
      - main # Or your default branch
    paths:
      - 'demo/**'
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

# Grant GITHUB_TOKEN the permissions it needs to deploy to Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Use the Node.js version your project requires
          cache: 'npm'

      - name: Install dependencies (from monorepo root)
        # We run this from the root to ensure all cross-package dependencies are linked correctly
        run: npm install

      - name: Build the demo application
        # Use `working-directory` to run the build command inside the /demo folder
        working-directory: ./demo
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # This should be the output directory of your build command
          # Vite -> 'demo/dist'
          # Create React App -> 'demo/build'
          path: 'demo/dist' # <-- VERY IMPORTANT: CHANGE 'dist' to 'build' if you use CRA

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4